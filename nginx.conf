worker_processes  8;

events {
    worker_connections  4096;
}

http {

   #global to all server blocks
   #==========================================================================

           # Set data/file types
           #^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            include            mime.types;
            default_type       application/octet-stream;
            sendfile           on;
            keepalive_timeout  65;

            log_subrequest on;

           # Set proxy specifics and set variables (i.e., remote IP address)
           #^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            proxy_redirect     off;

            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Ssl  on;
            proxy_max_temp_file_size            0;

            client_max_body_size       1025m;
            client_body_buffer_size    128k;

            proxy_connect_timeout      90;
            proxy_send_timeout         90;
            proxy_read_timeout         90;

            proxy_buffer_size          4k;
            proxy_buffers              16 64k;
            proxy_busy_buffers_size    64k;
            proxy_temp_file_write_size 64k;

           # Set SSL specifics
           #^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            ssl                       on;
            ssl_session_timeout       5m;
            ssl_protocols             TLSv1; #required by SNI
            ssl_ciphers               HIGH:!aNULL:!MD5;
            ssl_prefer_server_ciphers on;
            server_tokens             off;

           # LUA specifics
           #^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            lua_need_request_body on;


    # HTTPS server foo
    #------------------------------------------------------------------------
    server {
        listen       443 ssl;
        server_name  foo.example.com;
        access_log   /var/log/nginx/foo.example.com_access.log;
        error_log    /var/log/nginx/foo.example.com_error.log;

        ssl_certificate      /usr/local/etc/nginx/ssl/foo.example.com.crt;
        ssl_certificate_key  /usr/local/etc/nginx/ssl/foo.example.com.key;

        location / {
            set $plex_auth_secret        "Secret.Random.String.For.Making.Tokens";
            set $plex_auth_server_ID     "The.Plex.tv.machineIdentifier.For.The.Mapped.Server";
            set $plex_auth_expires_after 3600;
            proxy_connect_timeout        600;
            proxy_send_timeout           600;
            proxy_read_timeout           600;
            send_timeout                 600;

            access_by_lua_file           /usr/local/etc/nginx/plex_auth.lua;
            proxy_pass                   https://foo.example.local;
        }

        location = /_auth {
            internal;
            proxy_pass https://plex.tv/pms/servers;
            proxy_pass_request_body off;
            proxy_set_header Accept-Encoding "";
        }
    }

    # HTTPS server bar
    #------------------------------------------------------------------------
    server {
        listen       443 ssl;
        server_name  bar.example.com;
        access_log   /var/log/nginx/bar.example.com_access.log;
        error_log    /var/log/nginx/bar.example.com_error.log;

        ssl_certificate      /usr/local/etc/nginx/ssl/bar.example.com.crt;
        ssl_certificate_key  /usr/local/etc/nginx/ssl/bar.example.com.key;

        location / {
            set $plex_auth_secret        "Another.Secret.Random.String.For.Making.Tokens";
            set $plex_auth_server_ID     "The.Plex.tv.machineIdentifier.For.The.Mapped.Server";
            set $plex_auth_expires_after 3600;
            proxy_connect_timeout        600;
            proxy_send_timeout           600;
            proxy_read_timeout           600;
            send_timeout                 600;

            access_by_lua_file           /usr/local/etc/nginx/plex_auth.lua;
            proxy_pass                   https://bar.example.local;
        }

        location = /_auth {
            internal;
            proxy_pass https://plex.tv/pms/servers;
            proxy_pass_request_body off;
            proxy_set_header Accept-Encoding "";
        }
    }
